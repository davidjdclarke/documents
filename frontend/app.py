from flask import Flask, request, jsonify, render_template
from flask_cors import CORS
import os, time
import logging

app = Flask(__name__)
CORS(app)

logger = logging.getLogger(__name__)

UPLOAD_FOLDER = 'uploads'
if not os.path.exists(UPLOAD_FOLDER):
    os.makedirs(UPLOAD_FOLDER)


@app.route('/')
def home():
    return render_template('chat.html')


@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400

    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400

    if file:
        filename = os.path.join(UPLOAD_FOLDER, file.filename)
        file.save(filename)
        return jsonify({'message': 'File uploaded successfully', 'filename': filename}), 200


@app.route('/chat', methods=['POST'])
def chat():
    if not request.is_json:
        return jsonify({"error": "Expected JSON"}), 400

    data = request.get_json()
    user_message = data.get('message', '')
    logger.info(f"Received message: {user_message}")
    # In a real-world scenario, the response might be generated by a chatbot model
    # For now, we just send a canned response
    time.sleep(5)
    return jsonify({"response": f"Received your message: '{user_message}'. Hello from the server!"}), 200


if __name__ == '__main__':
    app.run(debug=True)
